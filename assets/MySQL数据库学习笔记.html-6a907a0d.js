import{_ as t,Y as e,Z as n,a4 as a}from"./framework-17eb0294.js";const s={},d=a(`<h4 id="一、数据库简介" tabindex="-1"><a class="header-anchor" href="#一、数据库简介" aria-hidden="true">#</a> 一、数据库简介</h4><p>MySQL数据库是一款关系型数据库管理系统，主要用于中小规模的数据的存储和处理，是现在相当流行的一款数据库类型。</p><p>关系型数据库是采用了关系模型来组织数据的数据库，实体之间的关系有一对一、一对多、多对多三种。</p><h4 id="二、数据库的三大范式" tabindex="-1"><a class="header-anchor" href="#二、数据库的三大范式" aria-hidden="true">#</a> 二、数据库的三大范式</h4><p>范式：数据库设计时需要遵循一定的种规则，在关系型数据库中，这种规则就被称为范式。</p><h5 id="_1、第一范式-1nf" tabindex="-1"><a class="header-anchor" href="#_1、第一范式-1nf" aria-hidden="true">#</a> 1、第一范式(1NF)：</h5><p>基本数据项不可再分，也就是属性已经是最小的了，不能再继续向下划分。</p><h5 id="_2、第二范式-2nf" tabindex="-1"><a class="header-anchor" href="#_2、第二范式-2nf" aria-hidden="true">#</a> 2、第二范式(2NF)：</h5><p>满足第一范式的前提下，要有一个主键且其他属性要完全依赖于主键。</p><h5 id="_3、第三范式-3nf" tabindex="-1"><a class="header-anchor" href="#_3、第三范式-3nf" aria-hidden="true">#</a> 3、第三范式(3NF)：</h5><p>在满足第二范式的前提下，所有属性不能传递依赖于主键。</p><p>在此之外还有一些其他的范式存在，比如第四范式(BCNF)等，但一般情况下满足三大范式就已经是一个比较成功的数据库设计了。</p><h4 id="三、sql语句" tabindex="-1"><a class="header-anchor" href="#三、sql语句" aria-hidden="true">#</a> 三、SQL语句</h4><h5 id="_1、介绍" tabindex="-1"><a class="header-anchor" href="#_1、介绍" aria-hidden="true">#</a> 1、介绍</h5><p>SQL语句也被称作结构化查询语句，主要用于对关系型数据库进行各种操作，如：增删查改、建库删库等。</p><p>基本上所有的关系型数据库都支持SQL语言，但不同的关系型数据库SQL的细节方面会有些区别，不过都大同小异。</p><h5 id="_2、特点" tabindex="-1"><a class="header-anchor" href="#_2、特点" aria-hidden="true">#</a> 2、特点：</h5><p>(1)、支持多行书写。</p><p>(2)、每一行语句都以分号结尾。</p><p>(3)、其本身不区分大小写。</p><h5 id="_3、分类" tabindex="-1"><a class="header-anchor" href="#_3、分类" aria-hidden="true">#</a> 3、分类</h5><p>SQL语句依据实现的功能不同可分为四种：</p><p>(1)、数据库查询语言(DQL)</p><p>主要用于查询数据库中表的记录，关键字有select、from、where等。</p><p>(2)、数据库操作语言(DML)</p><p>主要用于对数据库中的数据进行添加、更新和删除操作，关键字有insert、delete、update等。</p><p>(3)、数据库定义语言(DDL)</p><p>主要用于定义和删除数据库对象，如数据库、表、列等，关键字有create，alter，drop等。</p><p>(4)、数据库控制语言(DCL)</p><p>主要用于数据库的访问权限、安全级别以及用户管理等，关键字有grant等。</p><h5 id="_4、数据库定义语言的使用" tabindex="-1"><a class="header-anchor" href="#_4、数据库定义语言的使用" aria-hidden="true">#</a> 4、数据库定义语言的使用</h5><p>(1)、创建数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> TEST<span class="token punctuation">;</span>	
<span class="token comment">#创建一个名为 TEST 的数据库。</span>

<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> TEST <span class="token keyword">character</span> <span class="token keyword">set</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span>
<span class="token comment">#创建新数据库并设置字符集和排序规则</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(2)、删除数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> TEST<span class="token punctuation">;</span>		<span class="token comment">#删除名为 TEST 的数据库。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>(3)、创建表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> <span class="token keyword">create</span> <span class="token keyword">table</span> 表名<span class="token punctuation">(</span>
 字段名<span class="token number">1</span> 数据类型 <span class="token punctuation">[</span>列级约束条件<span class="token punctuation">]</span><span class="token punctuation">,</span>
 字段名<span class="token number">2</span> 数据类型 <span class="token punctuation">[</span>列级约束条件<span class="token punctuation">]</span><span class="token punctuation">,</span>
 字段名<span class="token number">3</span> 数据类型 <span class="token punctuation">[</span>列级约束条件<span class="token punctuation">]</span><span class="token punctuation">,</span>
 …
 <span class="token punctuation">[</span><span class="token punctuation">,</span>表级约束条件<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token comment">#创建表，中括号内的是可选项。</span>
 <span class="token comment">#表级约束： CONSTRAINT \`CONSTRAINT_1\` CHECK (\`id\` = 5 or \`id\` = 6)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(4)、修改表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>ALETER <span class="token keyword">TABLE</span> 表名
<span class="token punctuation">[</span><span class="token keyword">add</span> 新列名 数据类型<span class="token punctuation">[</span>列级约束条件<span class="token punctuation">]</span><span class="token punctuation">]</span>	 	<span class="token comment"># 添加新的一列</span>
<span class="token punctuation">[</span><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> 列名<span class="token punctuation">[</span><span class="token keyword">restrict</span><span class="token operator">|</span><span class="token keyword">cascade</span><span class="token punctuation">]</span><span class="token punctuation">]</span>	<span class="token comment"># 默认是restrict，cascade是强制删除</span>
<span class="token punctuation">[</span><span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> 列名 新数据类型<span class="token punctuation">]</span>			<span class="token comment"># 修改某一列的数据类型</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>举例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 添加列</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> 新列名 数据类型<span class="token punctuation">[</span>列级约束条件<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment"># 修改数据类型</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> ld <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> sex <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 删除列</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">drop</span> 列名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(5)、删除表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">table</span> 表名；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="附录" tabindex="-1"><a class="header-anchor" href="#附录" aria-hidden="true">#</a> 附录</h3><h4 id="一、约束条件" tabindex="-1"><a class="header-anchor" href="#一、约束条件" aria-hidden="true">#</a> 一、约束条件</h4><h5 id="_1、列级约束条件" tabindex="-1"><a class="header-anchor" href="#_1、列级约束条件" aria-hidden="true">#</a> 1、列级约束条件</h5><p>对一个数据列建立的约束，就被称为列级约束条件。</p><table><thead><tr><th style="text-align:center;">约束条件</th><th style="text-align:center;">约束描述</th></tr></thead><tbody><tr><td style="text-align:center;">primary key</td><td style="text-align:center;">主键约束，约束的值可唯一的标识对应的记录</td></tr><tr><td style="text-align:center;">foreign key</td><td style="text-align:center;">外键约束，约束与表之间的关系</td></tr><tr><td style="text-align:center;">unique</td><td style="text-align:center;">唯一约束，约束字段的值是惟一的</td></tr><tr><td style="text-align:center;">not null</td><td style="text-align:center;">非空约束，非空字段的值不能为空</td></tr><tr><td style="text-align:center;">default</td><td style="text-align:center;">默认值约束，用于保证该字段在不设置具体的内容时，有一个默认值。</td></tr><tr><td style="text-align:center;">check</td><td style="text-align:center;">检查约束，限制某个字段的值取值范围，MySQL8支持</td></tr><tr><td style="text-align:center;">auto_increment</td><td style="text-align:center;">自增约束可以使表中某个字段的值自动增加，但一张表中只能存在一个自增长字段，</td></tr></tbody></table><h5 id="_2、表级约束条件" tabindex="-1"><a class="header-anchor" href="#_2、表级约束条件" aria-hidden="true">#</a> 2、表级约束条件</h5><p>一般是对多个数据列建立的约束，但也可以应用于一列上。</p><table><thead><tr><th>约束条件</th><th>约束描述</th></tr></thead><tbody><tr><td>primary key</td><td>主键约束，约束的值可唯一的标识对应的记录</td></tr><tr><td>foreign key</td><td>外键约束，约束与表之间的关系</td></tr><tr><td>unique</td><td>唯一约束，约束字段的值是惟一的</td></tr><tr><td>check</td><td>检查约束，限制某个字段的值取值范围</td></tr></tbody></table><h4 id="二、sql常用数据类型" tabindex="-1"><a class="header-anchor" href="#二、sql常用数据类型" aria-hidden="true">#</a> 二、SQL常用数据类型</h4><table><thead><tr><th style="text-align:center;">数据类型</th><th style="text-align:center;">类型</th><th style="text-align:center;">大小</th><th style="text-align:center;">无符号范围</th></tr></thead><tbody><tr><td style="text-align:center;">SMALLINT</td><td style="text-align:center;">整数</td><td style="text-align:center;">2 Bytes</td><td style="text-align:center;">(0，65 535)</td></tr><tr><td style="text-align:center;">INT</td><td style="text-align:center;">整数</td><td style="text-align:center;">4 Bytes</td><td style="text-align:center;">(0，4 294 967 295)</td></tr><tr><td style="text-align:center;">FLOAT</td><td style="text-align:center;">浮点型</td><td style="text-align:center;">4 Bytes</td><td style="text-align:center;">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td></tr><tr><td style="text-align:center;">DOUBLE</td><td style="text-align:center;">浮点型</td><td style="text-align:center;">8 Bytes</td><td style="text-align:center;">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">DATETIME</td><td style="text-align:center;">日期和时间类型</td><td style="text-align:center;">8 Bytes</td><td style="text-align:center;">&#39;1000-01-01 00:00:00&#39; 到 &#39;9999-12-31 23:59:59&#39;</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">CHAR</td><td style="text-align:center;">字符串类型</td><td style="text-align:center;">-</td><td style="text-align:center;">大小可以自行设置，是定长字符串，0-255 Bytes</td></tr><tr><td style="text-align:center;">VARCHAR</td><td style="text-align:center;">字符串类型</td><td style="text-align:center;">-</td><td style="text-align:center;">大小可以自行设置，是可变字符串，0-65535 Bytes</td></tr></tbody></table><p>梗知识</p><ul><li>CRUD程序员，CRUD是数据库增删查改英文的缩写，用这个来形容程序员是有些贬义的，但更多的是用来自嘲玩梗。</li></ul>`,55),l=[d];function r(c,i){return e(),n("div",null,l)}const o=t(s,[["render",r],["__file","MySQL数据库学习笔记.html.vue"]]);export{o as default};
