import{_ as e,Y as t,Z as r,a4 as l}from"./framework-17eb0294.js";const a="/assets/images/Servlet/1.png",i={},s=l('<h3 id="servlet-体系结构概述" tabindex="-1"><a class="header-anchor" href="#servlet-体系结构概述" aria-hidden="true">#</a> Servlet 体系结构概述</h3><h5 id="_1、servlet-的概念" tabindex="-1"><a class="header-anchor" href="#_1、servlet-的概念" aria-hidden="true">#</a> 1、servlet 的概念：</h5><p>servlet 是用于处理请求并动态生成响应内容返回给客户端的一种接口规范，只是定义了接口，并没有去实现，有些类似于JDBC的样子，它也有许多不同的实现类。</p><h5 id="_2、体系结构" tabindex="-1"><a class="header-anchor" href="#_2、体系结构" aria-hidden="true">#</a> 2、体系结构</h5><p>顶级接口：Servelt 接口 ServeltConfig 接口</p><p>继承自 Servelt 的接口和实现类：</p><ul><li>顶级父接口：Servlet。 <ul><li>次级实现类或接口：GenericServlet 实现类、ServletRequest 接口、ServletResponse 接口。 <ul><li>Http请求处理：HttpServlet 实现类、HttpServletRequest 接口、HttpServletResponse 接口</li></ul></li></ul></li></ul><figure><img src="'+a+'" alt="关系图" tabindex="0" loading="lazy"><figcaption>关系图</figcaption></figure><p>一般处理请求比较常用的是带Http请求的类，对于Http相关的请求支持和方法都比较全面，推荐使用。</p>',9),n=[s];function c(o,_){return t(),r("div",null,n)}const p=e(i,[["render",c],["__file","Servlet体系结构.html.vue"]]);export{p as default};
